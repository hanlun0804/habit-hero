// Generated by view binder compiler. Do not edit!
package habit.habithero.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import habit.habithero.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManageHabitsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView deleteExpl;

  @NonNull
  public final FloatingActionButton fabBack;

  @NonNull
  public final RecyclerView rvManageItems;

  @NonNull
  public final TextView tvHabitTitle;

  private ActivityManageHabitsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView deleteExpl, @NonNull FloatingActionButton fabBack,
      @NonNull RecyclerView rvManageItems, @NonNull TextView tvHabitTitle) {
    this.rootView = rootView;
    this.deleteExpl = deleteExpl;
    this.fabBack = fabBack;
    this.rvManageItems = rvManageItems;
    this.tvHabitTitle = tvHabitTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManageHabitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManageHabitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manage_habits, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManageHabitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteExpl;
      TextView deleteExpl = ViewBindings.findChildViewById(rootView, id);
      if (deleteExpl == null) {
        break missingId;
      }

      id = R.id.fabBack;
      FloatingActionButton fabBack = ViewBindings.findChildViewById(rootView, id);
      if (fabBack == null) {
        break missingId;
      }

      id = R.id.rvManageItems;
      RecyclerView rvManageItems = ViewBindings.findChildViewById(rootView, id);
      if (rvManageItems == null) {
        break missingId;
      }

      id = R.id.tvHabitTitle;
      TextView tvHabitTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHabitTitle == null) {
        break missingId;
      }

      return new ActivityManageHabitsBinding((ConstraintLayout) rootView, deleteExpl, fabBack,
          rvManageItems, tvHabitTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
